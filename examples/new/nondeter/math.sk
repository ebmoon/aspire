void coin(int a, int b, int x, int y, ref int r){
    r = a * x + b * y;
}

void modmul(int a, int x, int M, ref int o){
    o = ((a*x)%M+M)%M;
}

void fun_M3(int a, int b, int x, ref int o){
    int M = 3;
    o = (a + b * x) % M;
}

void fun_M6(int a, int b, int x, ref int o){
    int M = 6;
    o = (a + b * x) % M;
}

void fun_M7(int a, int b, int x, ref int o){
    int M = 7;
    o = (a + b * x) % M;
}

void fun_M12(int a, int b, int x, ref int o){
    int M = 12;
    o = (a + b * x) % M;
}

void fun_M8(int a, int b, int x, ref int o){
    int M = 8;
    o = (a + b * x) % M;
}




void funab_M3(int a, int b, int x, int y, ref int o){
    int M = 3;
    o = (a * x + b * y) % M;
}

void funab_M6(int a, int b, int x, int y, ref int o){
    int M = 6;
    o = (a * x + b * y) % M;
}

void funab_M7(int a, int b, int x, int y, ref int o){
    int M = 7;
    o = (a * x + b * y) % M;
}

void funab_M8(int a, int b, int x, int y, ref int o){
    int M = 8;
    o = (a * x + b * y) % M;
}

void funab_M12(int a, int b, int x, int y, ref int o){
    int M = 12;
    o = (a * x + b * y) % M;
}

void isPrime(int M, ref boolean ret) {
    ret = M > 1;
    for(int i = 2; i*i <= M; i++)
        if(M % i == 0)
            ret = false;
}

void gcd(int a, int b, ref int g) {
   while (b != 0) {
     int tmp = a;
     a = b;
     b = tmp % b;
   }
   g = a > 0 ? a : -a;
}