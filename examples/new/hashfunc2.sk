struct PosInt{
    int data;
}

generator void genPosInt(ref PosInt x)
{
    x = new PosInt(data = ??(3) + 1);
}

void getData(PosInt x, ref int data) {
    data = x.data;
}

void mod(int x, PosInt M, ref int ret) {
    ret = (x % M.data + M.data) % M.data;
}

void hashfunc(int x, int h, PosInt M, ref int ret) {
    if(h % M.data == 0)
        h = h + 1;
    mod(x * h, M, ret);
}

void eq(int a, int b, ref boolean collide) {
    collide = (a == b);
}

void isPrime(PosInt M, ref boolean ret) {
    ret = true;
    for(int i = 2; i*i <= M.data; i++)
        if(M.data % i == 0)
            ret = false;
}

